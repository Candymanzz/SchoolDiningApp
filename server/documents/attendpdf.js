import PDFDocument from 'pdfkit';
import fs from 'fs';
import path from 'path';

const createAndDownloadAttendPdf = async (req, res) => {
    try {
        const { date, classx, students, attendance } = req.body;

        console.log("üì§ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF...");

        const pdfName = `attendance-report-${date}.pdf`;
        const pdfPath = path.join(__dirname, pdfName);

        const doc = new PDFDocument();
        const writeStream = fs.createWriteStream(pdfPath);
        doc.pipe(writeStream);

        doc.fontSize(18).text('Attendance Report', { align: 'center' }).moveDown();
        doc.fontSize(14).text(`–î–∞—Ç–∞: ${date}`);
        doc.fontSize(14).text(`–ö–ª–∞—Å—Å: ${classx}`).moveDown();

        doc.fontSize(12).text('–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:', { underline: true }).moveDown();
        students.forEach((student, index) => {
            const status = attendance[student.id] ? "‚úÖ –ü—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª" : "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª";
            doc.text(`${index + 1}. ${student.name} - ${status}`);
        });

        doc.end();

        writeStream.on('finish', () => {
            console.log("üì• –û—Ç–ø—Ä–∞–≤–∫–∞ PDF –∫–ª–∏–µ–Ω—Ç—É...");
            res.setHeader('Content-Type', 'application/pdf');
            res.setHeader('Content-Disposition', `attachment; filename="${pdfName}"`);
            res.sendFile(pdfPath, (err) => {
                if (err) {
                    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ PDF:", err);
                    res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
                }
                fs.unlinkSync(pdfPath);
            });
        });

    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF:", error);
        res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }
};

export default createAndDownloadAttendPdf;